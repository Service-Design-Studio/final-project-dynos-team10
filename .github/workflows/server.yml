name: "Server Run Tests and Deploy"

on:
  push:
    paths:
    - "server/**"

jobs:
  unit-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby, JRuby, TruffleRuby and Gems
        uses: ruby/setup-ruby@v1.110.0
        with:
          bundler-cache: true
          working-directory: server
      - name: Base64 encode secret
        id: base64-enc
        shell: python
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          import base64
          import os
          print(f'::set-output name=GCP_CREDENTIALS_BASE64::{base64.b64encode(os.environb[b"GCP_CREDENTIALS"])}')
      - name: Create config/service-account-credentials.json for GCS
        run: |-
          cd server/config
          echo $GCP_CREDENTIALS_ENC | base64 --decode > service-account-credentials.json
        env:
          GCP_CREDENTIALS_ENC: ${{ steps.base64-enc.outputs.GCP_CREDENTIALS_BASE64 }}
      # database setup
      - name: Set up database schema
        run: |-
          cd server &&
          bin/rails db:schema:load
      - name: Seed test database
        run: |-
          cd server &&
          bin/rails db:seed
      # test runners
      - name: Run tests
        run: |-
          cd server &&
          bundle exec rspec

  # build-and-deploy:
  #   needs: unit-test
  #   runs-on: ubuntu-latest
  #   # Add "id-token" with the intended permissions.
  #   permissions:
  #     contents: 'read'
  #     id-token: 'write'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     # Alternative option - authentication via credentials json
  #     - id: 'auth'
  #       uses: google-github-actions/auth@v0.7.3
  #       with:
  #         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
  #     - name: Set up Cloud SDK
  #       uses: google-github-actions/setup-gcloud@v0.6.0
  #     # Build and push image to Google Container Registry
  #     - name: Build
  #       run: |-
  #         cd server &&
  #         gcloud builds submit
